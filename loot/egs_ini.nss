///////////////////////////////////////////////////////////////////////////////
// egs_ini
// written by: eyesolated
// written at: June 17, 2004
//
// Notes:

///////////
// Includes
//
#include "eas_inc"
#include "egs_inc"

///////////////////////
// Function Declaration
//


////////////////
// Function Code
//
void InitAll()
{
   object oLog = GetObjectByTag("LOG");

   // Let's add our blueprints into the catalog
   egs_AddItem(CS_EGS_BP_CREATURE_ARMOR, CI_EGS_ITEM_MAIN_ARMOR_CREATURE, CI_EGS_ITEM_UNDEFINED, BASE_ITEM_CREATUREITEM, 1, 0);
   egs_AddItem(CS_EGS_BP_CREATURE_WEAPON_BLUDGEON, CI_EGS_ITEM_MAIN_WEAPON_CREATURE, CI_EGS_ITEM_UNDEFINED, BASE_ITEM_CBLUDGWEAPON, 1, 0);
   egs_AddItem(CS_EGS_BP_CREATURE_WEAPON_PIERCE, CI_EGS_ITEM_MAIN_WEAPON_CREATURE, CI_EGS_ITEM_UNDEFINED, BASE_ITEM_CPIERCWEAPON, 1, 0);
   egs_AddItem(CS_EGS_BP_CREATURE_WEAPON_SLASH, CI_EGS_ITEM_MAIN_WEAPON_CREATURE, CI_EGS_ITEM_UNDEFINED, BASE_ITEM_CSLASHWEAPON, 1, 0);
   egs_AddItem(CS_EGS_BP_CREATURE_WEAPON_SLASHPIERCE, CI_EGS_ITEM_MAIN_WEAPON_CREATURE, CI_EGS_ITEM_UNDEFINED, BASE_ITEM_CSLSHPRCWEAP, 1, 0);

   egs_AddItem(CS_EGS_BP_TUNIC, CI_EGS_ITEM_MAIN_ARMOR, CI_EGS_ITEM_SUB_ARMOR_BODY_CLOTHING, BASE_ITEM_ARMOR, 1, 6);
   egs_AddItem(CS_EGS_BP_ROBE, CI_EGS_ITEM_MAIN_ARMOR, CI_EGS_ITEM_SUB_ARMOR_BODY_CLOTHING, BASE_ITEM_ARMOR, 1, 7);

   egs_AddItem(CS_EGS_BP_BELT, CI_EGS_ITEM_MAIN_ACCESSORY, CI_EGS_ITEM_SUB_ACCESSORY_CLOTHING, BASE_ITEM_BELT, 1, 9);
   egs_AddItem(CS_EGS_BP_BOOTS, CI_EGS_ITEM_MAIN_ACCESSORY, CI_EGS_ITEM_SUB_ACCESSORY_CLOTHING, BASE_ITEM_BOOTS, 1, 6);
   egs_AddItem(CS_EGS_BP_BRACERS, CI_EGS_ITEM_MAIN_ACCESSORY, CI_EGS_ITEM_SUB_ACCESSORY_CLOTHING, BASE_ITEM_BRACER, 3, 12);
   egs_AddItem(CS_EGS_BP_BRACERSSHIELD, CI_EGS_ITEM_MAIN_ACCESSORY, CI_EGS_ITEM_SUB_ACCESSORY_CLOTHING, BASE_ITEM_BRACER_SHIELD, 3, 8);
   egs_AddItem(CS_EGS_BP_CLOAK, CI_EGS_ITEM_MAIN_ACCESSORY, CI_EGS_ITEM_SUB_ACCESSORY_CLOTHING, BASE_ITEM_CLOAK, 2, 21);
   egs_AddItem(CS_EGS_BP_GLOVES, CI_EGS_ITEM_MAIN_ACCESSORY, CI_EGS_ITEM_SUB_ACCESSORY_CLOTHING, BASE_ITEM_GLOVES, 2, 13);

   egs_AddItem(CS_EGS_BP_AMULET, CI_EGS_ITEM_MAIN_ACCESSORY, CI_EGS_ITEM_SUB_ACCESSORY_JEWELRY, BASE_ITEM_AMULET, 3, 12);
   egs_AddItem(CS_EGS_BP_RING, CI_EGS_ITEM_MAIN_ACCESSORY, CI_EGS_ITEM_SUB_ACCESSORY_JEWELRY, BASE_ITEM_RING, 2, 22);

   egs_AddItem(CS_EGS_BP_LEATHERARMOR, CI_EGS_ITEM_MAIN_ARMOR, CI_EGS_ITEM_SUB_ARMOR_BODY_LIGHT, BASE_ITEM_ARMOR, 1, 5);
   egs_AddItem(CS_EGS_BP_PADDEDARMOR, CI_EGS_ITEM_MAIN_ARMOR, CI_EGS_ITEM_SUB_ARMOR_BODY_LIGHT, BASE_ITEM_ARMOR, 1, 4);
   egs_AddItem(CS_EGS_BP_STUDDEDLEATHER, CI_EGS_ITEM_MAIN_ARMOR, CI_EGS_ITEM_SUB_ARMOR_BODY_LIGHT, BASE_ITEM_ARMOR, 1, 4);
   egs_AddItem(CS_EGS_BP_CHAINSHIRT, CI_EGS_ITEM_MAIN_ARMOR, CI_EGS_ITEM_SUB_ARMOR_BODY_LIGHT, BASE_ITEM_ARMOR, 1, 5);

   egs_AddItem(CS_EGS_BP_HIDEARMOR, CI_EGS_ITEM_MAIN_ARMOR, CI_EGS_ITEM_SUB_ARMOR_BODY_MEDIUM, BASE_ITEM_ARMOR, 2, 4);
   egs_AddItem(CS_EGS_BP_CHAINMAIL, CI_EGS_ITEM_MAIN_ARMOR, CI_EGS_ITEM_SUB_ARMOR_BODY_MEDIUM, BASE_ITEM_ARMOR, 2, 5);
   egs_AddItem(CS_EGS_BP_SCALEMAIL, CI_EGS_ITEM_MAIN_ARMOR, CI_EGS_ITEM_SUB_ARMOR_BODY_MEDIUM, BASE_ITEM_ARMOR, 2, 5);
   egs_AddItem(CS_EGS_BP_BREASTPLATE, CI_EGS_ITEM_MAIN_ARMOR, CI_EGS_ITEM_SUB_ARMOR_BODY_MEDIUM, BASE_ITEM_ARMOR, 3, 5);

   egs_AddItem(CS_EGS_BP_BANDEDMAIL, CI_EGS_ITEM_MAIN_ARMOR, CI_EGS_ITEM_SUB_ARMOR_BODY_HEAVY, BASE_ITEM_ARMOR, 3, 5);
   egs_AddItem(CS_EGS_BP_SPLINTMAIL, CI_EGS_ITEM_MAIN_ARMOR, CI_EGS_ITEM_SUB_ARMOR_BODY_HEAVY, BASE_ITEM_ARMOR, 3, 5);
   egs_AddItem(CS_EGS_BP_HALFPLATE, CI_EGS_ITEM_MAIN_ARMOR, CI_EGS_ITEM_SUB_ARMOR_BODY_HEAVY, BASE_ITEM_ARMOR, 3, 5);
   egs_AddItem(CS_EGS_BP_FULLPLATE, CI_EGS_ITEM_MAIN_ARMOR, CI_EGS_ITEM_SUB_ARMOR_BODY_HEAVY, BASE_ITEM_ARMOR, 4, 5);

   egs_AddItem(CS_EGS_BP_HELMET, CI_EGS_ITEM_MAIN_ARMOR, CI_EGS_ITEM_SUB_ARMOR_HELMET, BASE_ITEM_HELMET, 1, 12);

   egs_AddItem(CS_EGS_BP_SHIELDSMALL, CI_EGS_ITEM_MAIN_ARMOR, CI_EGS_ITEM_SUB_ARMOR_SHIELD, BASE_ITEM_SMALLSHIELD, 1, 4, CI_EGS_WEAPONSIZE_SMALL);
   egs_AddItem(CS_EGS_BP_SHIELDLARGE, CI_EGS_ITEM_MAIN_ARMOR, CI_EGS_ITEM_SUB_ARMOR_SHIELD, BASE_ITEM_LARGESHIELD, 2, 5, CI_EGS_WEAPONSIZE_MEDIUM);
   egs_AddItem(CS_EGS_BP_SHIELDTOWER, CI_EGS_ITEM_MAIN_ARMOR, CI_EGS_ITEM_SUB_ARMOR_SHIELD, BASE_ITEM_TOWERSHIELD, 3, 6, CI_EGS_WEAPONSIZE_LARGE);

/*
Prerequisite: None. This feat allows effective use of all simple weapons including
club, dagger, mace, sickle, spear, morningstar, quarterstaff, light crossbow, dart, sling,
and havey crossbow.
Use: All characters except for druids, monks, rogues, and wizards are
automatically proficient with all simple weapons.
The spell Tenser's Transformation gives a wizard a temporary proficiency
with all simple weapons.
*/
   egs_AddItem(CS_EGS_BP_CLUB, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_CLUB, 1, 2, CI_EGS_WEAPONSIZE_MEDIUM);
   egs_AddItem(CS_EGS_BP_DAGGER, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_DAGGER, 1, 4, CI_EGS_WEAPONSIZE_TINY);
   egs_AddItem(CS_EGS_BP_MACE, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_LIGHTMACE, 1, 5, CI_EGS_WEAPONSIZE_SMALL);
   egs_AddItem(CS_EGS_BP_SICKLE, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_SICKLE, 1, 5, CI_EGS_WEAPONSIZE_SMALL);
   egs_AddItem(CS_EGS_BP_SPEAR, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_SHORTSPEAR, 1, 5, CI_EGS_WEAPONSIZE_LARGE);
   egs_AddItem(CS_EGS_BP_MORNINGSTAR, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_MORNINGSTAR, 1, 5, CI_EGS_WEAPONSIZE_MEDIUM);
   egs_AddItem(CS_EGS_BP_QUARTERSTAFF, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_QUARTERSTAFF, 1, 5, CI_EGS_WEAPONSIZE_MEDIUM);
   egs_AddItem(CS_EGS_BP_LIGHTCROSSBOW, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_RANGED, BASE_ITEM_LIGHTCROSSBOW, 1, 5, CI_EGS_WEAPONSIZE_SMALL);
   egs_AddItem(CS_EGS_BP_DART, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_THROWN, BASE_ITEM_DART, 1, 5, CI_EGS_WEAPONSIZE_SMALL);
   egs_AddItem(CS_EGS_BP_SLING, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_RANGED, BASE_ITEM_SLING, 1, 5, CI_EGS_WEAPONSIZE_SMALL);
   egs_AddItem(CS_EGS_BP_HEAVYCROSSBOW, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_RANGED, BASE_ITEM_HEAVYCROSSBOW, 2, 5, CI_EGS_WEAPONSIZE_MEDIUM);

/*
Prerequisite: None. This feat allows effective use of all martial weapons.
A character cannot equip weapons they are not proficient in. The martial weapons
list includes the bastard sword, battleaxe, greataxe, greatsword, halberd,
handaxe, heavy flail, light flail, light hammer, longbow, longsword, rapier,
scimitar, short sword, shortbow, throwing axe, and warhammer.
Use: Barbarians, fighters, paladins, and rangers are automatically proficient
with all martial weapons.
*/
   egs_AddItem(CS_EGS_BP_BASTARDSWORD, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_BASTARDSWORD, 3, 5, CI_EGS_WEAPONSIZE_MEDIUM);
   egs_AddItem(CS_EGS_BP_BATTLEAXE, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_BATTLEAXE, 2, 5, CI_EGS_WEAPONSIZE_MEDIUM);
   egs_AddItem(CS_EGS_BP_GREATAXE, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_GREATAXE, 3, 5, CI_EGS_WEAPONSIZE_LARGE);
   egs_AddItem(CS_EGS_BP_GREATSWORD, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_GREATSWORD, 3, 5, CI_EGS_WEAPONSIZE_LARGE);
   egs_AddItem(CS_EGS_BP_HALBERD, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_HALBERD, 3, 5, CI_EGS_WEAPONSIZE_LARGE);
   egs_AddItem(CS_EGS_BP_HANDAXE, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_HANDAXE, 2, 5, CI_EGS_WEAPONSIZE_SMALL);
   egs_AddItem(CS_EGS_BP_HEAVYFLAIL, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_HEAVYFLAIL, 3, 5, CI_EGS_WEAPONSIZE_LARGE);
   egs_AddItem(CS_EGS_BP_LIGHTFLAIL, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_LIGHTFLAIL, 2, 5, CI_EGS_WEAPONSIZE_MEDIUM);
   egs_AddItem(CS_EGS_BP_LIGHTHAMMER, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_LIGHTHAMMER, 2, 5, CI_EGS_WEAPONSIZE_SMALL);
   egs_AddItem(CS_EGS_BP_LONGBOW, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_RANGED, BASE_ITEM_LONGBOW, 3, 5, CI_EGS_WEAPONSIZE_LARGE);
   egs_AddItem(CS_EGS_BP_LONGSWORD, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_LONGSWORD, 3, 6, CI_EGS_WEAPONSIZE_MEDIUM);
   egs_AddItem(CS_EGS_BP_RAPIER, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_RAPIER, 2, 5, CI_EGS_WEAPONSIZE_MEDIUM);
   egs_AddItem(CS_EGS_BP_SCIMITAR, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_SCIMITAR, 2, 5, CI_EGS_WEAPONSIZE_MEDIUM);
   egs_AddItem(CS_EGS_BP_SHORTSWORD, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_SHORTSWORD, 2, 5, CI_EGS_WEAPONSIZE_SMALL);
   egs_AddItem(CS_EGS_BP_THROWINGAXE, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_THROWN, BASE_ITEM_THROWINGAXE, 1, 5, CI_EGS_WEAPONSIZE_SMALL);
   egs_AddItem(CS_EGS_BP_SHORTBOW, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_RANGED, BASE_ITEM_SHORTBOW, 1, 5, CI_EGS_WEAPONSIZE_MEDIUM);
   egs_AddItem(CS_EGS_BP_WARHAMMER, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_WARHAMMER, 2, 5, CI_EGS_WEAPONSIZE_MEDIUM);
   egs_AddItem(CS_EGS_BP_DWARVENWARAXE, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_DWARVENWARAXE, 3, 5, CI_EGS_WEAPONSIZE_MEDIUM);

/*
The exotic weapons list includes the dire mace, double axe, kama, katana, kukri,
scythe, shuriken, and two-bladed sword.
*/
   egs_AddItem(CS_EGS_BP_DIREMACE, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_DIREMACE, 3, 5, CI_EGS_WEAPONSIZE_LARGE);
   egs_AddItem(CS_EGS_BP_DOUBLEAXE, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_DOUBLEAXE, 3, 5, CI_EGS_WEAPONSIZE_LARGE);
   egs_AddItem(CS_EGS_BP_KAMA, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_KAMA, 1, 5, CI_EGS_WEAPONSIZE_TINY);
   egs_AddItem(CS_EGS_BP_KATANA, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_KATANA, 3, 5, CI_EGS_WEAPONSIZE_MEDIUM);
   egs_AddItem(CS_EGS_BP_KUKRI, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_KUKRI, 2, 5, CI_EGS_WEAPONSIZE_TINY);
   egs_AddItem(CS_EGS_BP_SCYTHE, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_SCYTHE, 4, 5, CI_EGS_WEAPONSIZE_LARGE);
   egs_AddItem(CS_EGS_BP_SHURIKEN, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_THROWN, BASE_ITEM_SHURIKEN, 1, 5, CI_EGS_WEAPONSIZE_TINY);
   egs_AddItem(CS_EGS_BP_TWOBLADEDSWORD, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_TWOBLADEDSWORD, 3, 5, CI_EGS_WEAPONSIZE_LARGE);
   egs_AddItem(CS_EGS_BP_WHIP, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_WHIP, 2, 1, CI_EGS_WEAPONSIZE_MEDIUM);

// Ammo
   egs_AddItem(CS_EGS_BP_ARROW, CI_EGS_ITEM_MAIN_AMMO, CI_EGS_ITEM_UNDEFINED, BASE_ITEM_ARROW, 1, 5);
   egs_AddItem(CS_EGS_BP_BOLT, CI_EGS_ITEM_MAIN_AMMO, CI_EGS_ITEM_UNDEFINED, BASE_ITEM_BOLT, 1, 5);
   egs_AddItem(CS_EGS_BP_BULLET, CI_EGS_ITEM_MAIN_AMMO, CI_EGS_ITEM_UNDEFINED, BASE_ITEM_BULLET, 1, 5);

// Bombs
   egs_AddItem(CS_EGS_BP_ACIDFLASK, CI_EGS_ITEM_MAIN_BOMB, CI_EGS_ITEM_UNDEFINED, CI_EGS_ITEM_UNDEFINED, 3);
   egs_AddItem(CS_EGS_BP_ALCHEMISTSFIRE, CI_EGS_ITEM_MAIN_BOMB, CI_EGS_ITEM_UNDEFINED, CI_EGS_ITEM_UNDEFINED, 4);
   egs_AddItem(CS_EGS_BP_CALTROPS, CI_EGS_ITEM_MAIN_BOMB, CI_EGS_ITEM_UNDEFINED, CI_EGS_ITEM_UNDEFINED, 1);
   egs_AddItem(CS_EGS_BP_CHOKINGPOWDER, CI_EGS_ITEM_MAIN_BOMB, CI_EGS_ITEM_UNDEFINED, CI_EGS_ITEM_UNDEFINED, 3);
   egs_AddItem(CS_EGS_BP_HOLYWATER, CI_EGS_ITEM_MAIN_BOMB, CI_EGS_ITEM_UNDEFINED, CI_EGS_ITEM_UNDEFINED, 3);
   egs_AddItem(CS_EGS_BP_TANGLEFOOTBAG, CI_EGS_ITEM_MAIN_BOMB, CI_EGS_ITEM_UNDEFINED, CI_EGS_ITEM_UNDEFINED, 2);
   egs_AddItem(CS_EGS_BP_THUNDERSTONE, CI_EGS_ITEM_MAIN_BOMB, CI_EGS_ITEM_UNDEFINED, CI_EGS_ITEM_UNDEFINED, 3);

// Mage-Specific
   egs_AddItem(CS_EGS_BP_STAFF, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_STAFF, BASE_ITEM_MAGICSTAFF, 8, 5, CI_EGS_WEAPONSIZE_MEDIUM);
   egs_AddItem(CS_EGS_BP_ROD, CI_EGS_ITEM_MAIN_RODWAND, CI_EGS_ITEM_UNDEFINED, BASE_ITEM_MAGICROD, 6, 5);
   egs_AddItem(CS_EGS_BP_WAND, CI_EGS_ITEM_MAIN_RODWAND, CI_EGS_ITEM_UNDEFINED, BASE_ITEM_MAGICWAND, 4, 5);

// Books
   egs_AddItem(CS_EGS_BP_BOOK, CI_EGS_ITEM_UNDEFINED, CI_EGS_ITEM_UNDEFINED, BASE_ITEM_BOOK, 1, 5);

// Containers
   egs_AddItem(CS_EGS_BP_LARGEBOX, CI_EGS_ITEM_MAIN_CONTAINER, CI_EGS_ITEM_UNDEFINED, BASE_ITEM_LARGEBOX, 1);
   egs_AddItem(CS_EGS_BP_BAG, CI_EGS_ITEM_MAIN_CONTAINER, CI_EGS_ITEM_UNDEFINED, BASE_ITEM_LARGEBOX, 2);
   //s_egs_AddItem(CS_EGS_BP_SMALLBOX, CI_EGS_ITEM_MAIN_CONTAINER, CI_EGS_ITEM_UNDEFINED, BASE_ITEM_LARGEBOX, 1);
   //s_egs_AddItem(CS_EGS_BP_SMALLBAG, CI_EGS_ITEM_MAIN_CONTAINER, CI_EGS_ITEM_UNDEFINED, BASE_ITEM_LARGEBOX, 2);

   //s_egs_AddItem(CS_EGS_BP_SCROLL, CI_EGS_ITEM_MAIN_MISC, CI_EGS_ITEM_UNDEFINED, BASE_ITEM_SCROLL, 2);

// Other Items
   egs_AddItem(CS_EGS_BP_POTION, CI_EGS_ITEM_UNDEFINED, CI_EGS_ITEM_UNDEFINED, BASE_ITEM_POTIONS, 1);
   egs_AddItem(CS_EGS_BP_THIEVESTOOLS, CI_EGS_ITEM_UNDEFINED, CI_EGS_ITEM_UNDEFINED, BASE_ITEM_THIEVESTOOLS, 3);
   egs_AddItem(CS_EGS_BP_TRAP, CI_EGS_ITEM_UNDEFINED, CI_EGS_ITEM_UNDEFINED, BASE_ITEM_TRAPKIT, 4);
   egs_AddItem(CS_EGS_BP_MEDKIT, CI_EGS_ITEM_UNDEFINED, CI_EGS_ITEM_UNDEFINED, BASE_ITEM_HEALERSKIT, 1);

// Miscellaneous Items
   egs_AddItem(CS_EGS_BP_TORCH, CI_EGS_ITEM_MAIN_MISC, CI_EGS_ITEM_UNDEFINED, BASE_ITEM_TORCH, 1);
   egs_AddItem(CS_EGS_BP_GEM, CI_EGS_ITEM_MAIN_MISC, CI_EGS_ITEM_UNDEFINED, BASE_ITEM_GEM, 3, 16);

// Food
   egs_AddItem("foodration", CI_EGS_ITEM_MAIN_FOOD, CI_EGS_ITEM_UNDEFINED, CI_EGS_ITEM_UNDEFINED, 1, 0);
   egs_AddItem("cookedfood", CI_EGS_ITEM_MAIN_FOOD, CI_EGS_ITEM_UNDEFINED, CI_EGS_ITEM_UNDEFINED, 2, 0);
   egs_AddItem("foodration001", CI_EGS_ITEM_MAIN_FOOD, CI_EGS_ITEM_UNDEFINED, CI_EGS_ITEM_UNDEFINED, 2, 0);

// CEP Weapons
   egs_AddItem(CS_EGS_BP_ASSASSINDAGGER, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_ASSASSIN_DAGGER, 2, 5, CI_EGS_WEAPONSIZE_TINY); // Dagger
   egs_AddItem(CS_EGS_BP_CHAKRAM, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_THROWN, BASE_ITEM_THROWINGAXE, 1, 4, CI_EGS_WEAPONSIZE_SMALL);  // Throwing Axe - Ranged Weapon
   egs_AddItem(CS_EGS_BP_DAIKYU, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_RANGED, BASE_ITEM_LONGBOW, 3, 4, CI_EGS_WEAPONSIZE_LARGE); // Longbow
   egs_AddItem(CS_EGS_BP_DOUBLESCIMITAR, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_SCIMITAR_DOUBLE, 4, 5, CI_EGS_WEAPONSIZE_LARGE); // Double-Sided - Melee
   egs_AddItem(CS_EGS_BP_FALCHION, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_FALCHION, 3, 4, CI_EGS_WEAPONSIZE_MEDIUM); // Falchion - Sword
   egs_AddItem(CS_EGS_BP_GOAD, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_GOAD, 4, 1, CI_EGS_WEAPONSIZE_SMALL); // Exotic - Melee
   egs_AddItem(CS_EGS_BP_HEAVYMACE, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_MACE_HEAVY, 3, 5, CI_EGS_WEAPONSIZE_LARGE); // Heavy Mace
   egs_AddItem(CS_EGS_BP_HEAVYPICK, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_PICK_HEAVY, 3, 4, CI_EGS_WEAPONSIZE_LARGE); // Heavy Pick - Melee
   egs_AddItem(CS_EGS_BP_KATAR, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_KATAR, 2, 5, CI_EGS_WEAPONSIZE_SMALL);     // Exotic - Melee
   egs_AddItem(CS_EGS_BP_LIGHTPICK, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_PICK_LIGHT, 2, 4, CI_EGS_WEAPONSIZE_MEDIUM);  // Picks - Melee
   egs_AddItem(CS_EGS_BP_MAUL, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_MAUL, 4, 5, CI_EGS_WEAPONSIZE_LARGE); // Hammer
   egs_AddItem(CS_EGS_BP_NAGAMAKI, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_SCYTHE, 3, 4, CI_EGS_WEAPONSIZE_LARGE); // Polearm
   egs_AddItem(CS_EGS_BP_NINJATO, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_SHORTSWORD, 2, 4, CI_EGS_WEAPONSIZE_SMALL);      // Short Sword
   egs_AddItem(CS_EGS_BP_NODACHI, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_SHORTSWORD, 4, 4, CI_EGS_WEAPONSIZE_LARGE);// Greatsword
   egs_AddItem(CS_EGS_BP_NUNCHAKU, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_NUNCHAKU, 3, 4, CI_EGS_WEAPONSIZE_MEDIUM);// Exotic
   egs_AddItem(CS_EGS_BP_SAI, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_SAI, 2, 4, CI_EGS_WEAPONSIZE_SMALL);  // Exotic - Melee
   egs_AddItem(CS_EGS_BP_SAP, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_SAP, 2, 4, CI_EGS_WEAPONSIZE_SMALL); // Exotic - Melee
   egs_AddItem(CS_EGS_BP_TANTO, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_DAGGER, 1, 4, CI_EGS_WEAPONSIZE_TINY); // Dagger
   egs_AddItem(CS_EGS_BP_TRIDENT, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_TRIDENT_1HAND, 4, 4, CI_EGS_WEAPONSIZE_LARGE); // Trident - Melee
   egs_AddItem(CS_EGS_BP_WAKIZASHI, CI_EGS_ITEM_MAIN_WEAPON, CI_EGS_ITEM_SUB_WEAPON_MELEE, BASE_ITEM_SHORTSWORD, 2, 4, CI_EGS_WEAPONSIZE_SMALL); // Short Sword

// The Ring of Xtra Difficulty
  // egs_AddItem(CS_EGS_BP_MONSTERRING, CI_EGS_ITEM_MAIN_MONSTERRING, -1, -1, 1);

   SetDescription(oLog, GetDescription(oLog) + "\nEGS - initialized.");
   WriteTimestampedLogEntry("EGS - initalized");
}


void main()
{
    // If all tables exist, do not (re)initialize
    if (egs_GetTableExists())
    {
        object oLog = GetObjectByTag("LOG");
        SetDescription(oLog, GetDescription(oLog) + "\nEGS - database already exists.");
        WriteTimestampedLogEntry("EGS - database already exists - skipping initialization.");
        return;
    }

    // Drop any existing tables
    egs_DropTable();

    // Create table
    egs_CreateTable();

    // Initialization
    DelayCommand(0.1, InitAll());
}
